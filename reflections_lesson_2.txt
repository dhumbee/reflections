What happens when you initialize a repository? Why do you need to do it?
	
	It will add a git file to it for tracking.  We have to set this to make sure it's going to keep track of changing commits.

How is the staging area different from the working directory and the repository?
What value do you think it offers?

	The staging area is a place where files can be committed or removed if you choose not to committ.  The working directory is your base file directory.  I think having the staging area is good to be sure you want everything in it to be part of the one committ.

How can you use the staging area to make sure you have one commit per logical
change?

	You can control what changes you add as the one commit.  And which files it contain.

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

	If you would want to make changes to a specific feature or section while still keeping the original.  Branches keep your changes organized.

	Each commit made builds upon last commit(linear commit)-a branch is a label for the commit.  The first is "master"-the main branch.  Current last commit on a branch called "the tip". Combining 2 commits is called "merging".	

How do the diagrams help you visualize the branch structure?

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges
manually?